namespace org.accordproject.smoke

import org.accordproject.cicero.runtime.*

define concept A{ a : Integer }
define concept C{ contract : String }

define concept TemplateModel {}
define transaction MyRequest extends Request {}
define transaction MyResponse extends Response {
  output: String
}

define constant PI = 4.0 * atan(1.0)

contract Math over TemplateModel {

  clause test(request : MyRequest) : MyResponse {
    enforce(sin(0.0) = 0.0);
    enforce(cos(0.0) = 1.0);
    enforce(tan(0.0) = 0.0);

    enforce(sin(PI/2.0) = 1.0);
    enforce(cos(2.0 * PI) = 1.0);
    enforce(tan(PI/4.0) = 0.9999999999999999);

    enforce(asin(sin(1.0)) = 1.0);
    // TODO why does this one fail?
    //enforce(acos(cos(1.0)) = 1.0);
    enforce(atan(tan(1.0)) = 1.0);

    enforce(sinh(0.0) = 0.0);
    enforce(cosh(0.0) = 1.0);
    enforce(tanh(0.0) = 0.0);

    enforce(atan2(1.0, 1.0) = atan(1.0));

    return MyResponse{
      output: "Math.test successful"
    }
  }
}