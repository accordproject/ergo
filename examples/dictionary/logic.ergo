/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* A simple contract using a dictionary */

namespace org.accordproject.testdict

import org.accordproject.ergo.dictionary.*

contract MyContract over Template {
  clause testOptional(request:Request1) : Integer? {
    return get(request.dict, contract.customName)
  }
  clause testCanFail(request:Request2) : Integer {
    match get(request.dict, contract.customName)
    with let? x then return x
    else throw failure("Could not find custom field " ++ contract.customName)
  } 
}

/* To test in REPL
// to run: ergotop dict.cto dict.ergo model.cto logic.ergo 

import org.accordproject.ergo.dictionary.*
import org.accordproject.testdict.*

define constant myDict : Dictionary = add(add(create(),"foo",1),"bar",2)

set contract MyContract over Template{ customName: "foo" }
call init()

call testOptional(Request1{ dict : myDict })
call testOptional(Request1{ dict : add(myDict,"foo",3) })
call testOptional(Request1{ dict : remove(myDict,"foo") })

call testCanFail(Request2{ dict : myDict })
call testCanFail(Request2{ dict : add(myDict,"foo",3) })
call testCanFail(Request2{ dict : remove(myDict,"foo") })

*/
