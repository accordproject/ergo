/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

namespace org.accordproject.volumediscount

define function findRate(volume: Double, rateTable: RateRange[]) : Double? {
  return singleton(
    foreach r in rateTable
    where
      let upperBound = r.volumeUpTo ?? infinity;
      let lowerBound = r.volumeAbove ?? 0.0;
      volume > lowerBound and volume <= upperBound
    return r.rate
  )
}

contract VolumeDiscount over VolumeDiscountContract {
   // Clause for volume discount
  clause volumediscount(request : VolumeDiscountRequest) : VolumeDiscountResponse {
    let rateOpt = findRate(request.netAnnualChargeVolume, contract.rates);
    enforce rateOpt != none
    else throw failure("Could not find rate for that volume");

    let rate = rateOpt ?? 0.0;
    return VolumeDiscountResponse{ discountRate: rate }
  }
}
