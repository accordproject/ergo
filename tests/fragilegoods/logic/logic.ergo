/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

namespace io.clause.demo.fragileGoods

import org.accordproject.cicero.runtime.*

define function numberOfShocks(maxAcc : Double, minAcc : Double, accelerometerReadings : Double[]) : Double {
  return
    integerToDouble(count(
       foreach r in accelerometerReadings
       where r > maxAcc or r < minAcc
       return r
    )
	)
}

contract FragileGoods over TemplateModel {
  clause fragilegoods(request : DeliveryUpdate) : PayOut {
    let shocks =
        numberOfShocks(contract.accelerationMax,
		       contract.accelerationMin,
		       request.accelerometerReadings);
    let shockPenalty =
        contract.accelerationBreachPenalty
        * shocks;
    match request.status
      with "ARRIVED" then
        return PayOut{ amount : contract.deliveryPrice - shockPenalty }
      else
	return PayOut{ amount : contract.deliveryPrice - shockPenalty }
  }  
}
