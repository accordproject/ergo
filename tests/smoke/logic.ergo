/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

namespace org.accordproject.smoke

contract Smoke over TemplateModel {
  clause test(request : MyRequest) : MyResponse {
    enforce(1.0 + 1.0 = 2.0);
    enforce(-1.0 = 0.0 - 1.0);
    enforce(-(1.0 + 2.0) = -3.0);
    enforce(-1 = 0 - 1);
    enforce(0.0 < 1.0);
    enforce(0 < 1);
    enforce(0 < request.someint);
    enforce(0 <= 1);
    enforce(0 <= request.someint);
    enforce(!(1 > 1));
    enforce(1 > 0);
    enforce("Hello" ++ " " ++ "World!" = "Hello World!");
    enforce(some(1) ?? 2 = 1);
    enforce(some(A{ a : 1 })?.a = some(1));
    enforce(some(A{ a : 1 })?.a != none);
    enforce(some(A{ a : 1 })?.a ?? 2 = 1);
    enforce(none?.a = none);
    enforce(none?.a ?? 2 = 2);
    enforce(C{ contract : "foo" }.contract = "foo");
    enforce(C{ contract : "foo" }.contract = "foo");
    enforce(infinity = 1.0/0.0);
    enforce(-infinity = -1.0/0.0);
    enforce("\"\\
	" = "\034\092\010\013\009");
    enforce("\"\\
	" = "\"\\\n\r\t");
    enforce(arraySubtract([1,2,3],[2,3,4]) = [1]);
    enforce([1,2,3][-1] = none);
    enforce([1,2,3][0] = some(1));
    enforce([1,2,3][1] = some(2));
    enforce([1,2,3][2] = some(3));
    enforce([1,2,3][3] = none);
    enforce({a:[1,2,3]}.a[1] = some(2));
    enforce(length("") = 0);
    enforce(length("abcd") = 4);
		enforce(toString(1.0) = "1.0");
		enforce(toString(1) = "1");
		enforce(encode("http://foo bar") = "http%3A%2F%2Ffoo%20bar");
		enforce(decode("http%3A%2F%2Ffoo%20bar") = "http://foo bar");
    return MyResponse{
      output: "Smoke.test successful"
    }
  }
}
