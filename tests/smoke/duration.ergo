/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

namespace org.accordproject.smoke

import org.accordproject.time.*

contract Duration over TemplateModel {
  clause test(request : MyRequest) : MyResponse {
    enforce(isSame(addDuration(dateTime("2018-01-02"), Duration{amount:1, unit: ~org.accordproject.time.TemporalUnit.days}),
			             addDuration(dateTime("2018-01-01"), Duration{amount:2, unit: ~org.accordproject.time.TemporalUnit.days})));
    enforce(isSame(addDuration(dateTime("2019-01-08"), Duration{amount:1, unit: ~org.accordproject.time.TemporalUnit.weeks}),
			             addDuration(dateTime("2019-01-01"), Duration{amount:2, unit: ~org.accordproject.time.TemporalUnit.weeks})));
    enforce(isSame(subtractDuration(dateTime("2018-01-01"), Duration{amount:1, unit: ~org.accordproject.time.TemporalUnit.days}),
			             subtractDuration(dateTime("2018-01-02"), Duration{amount:2, unit: ~org.accordproject.time.TemporalUnit.days})));
    enforce(isSame(subtractDuration(dateTime("2019-01-01"), Duration{amount:1, unit: ~org.accordproject.time.TemporalUnit.weeks}),
			             subtractDuration(dateTime("2019-01-08"), Duration{amount:2, unit: ~org.accordproject.time.TemporalUnit.weeks})));
    enforce(isSame(addPeriod(dateTime("2018-02-01"), Period{amount:1, unit: months}),
			             addPeriod(dateTime("2018-01-01"), Period{amount:2, unit: months})));
    enforce(isSame(addPeriod(dateTime("2020-01-01"), Period{amount:1, unit: years}),
			             addPeriod(dateTime("2019-01-01"), Period{amount:2, unit: years})));
    enforce(isSame(dateTimeMax([dateTime("2018-01-08"), dateTime("2019-01-08"), dateTime("2011-01-08")]),
			dateTime("2019-01-08")));
    enforce(isSame(dateTimeMin([dateTime("2018-01-08"), dateTime("2019-01-08"), dateTime("2011-01-08")]),
			dateTime("2011-01-08")));
		enforce(getMonth(dateTime("08 Jan 2018 00:00 UT")) = 1);
		enforce(getMonth(dateTime("08 May 2018 00:00 UT")) = 5);
		enforce(getMonth(dateTime("08 Dec 2018 00:00 UT")) = 12);
		enforce(getMonth(dateTime("2018-01-08")) = 1);
		enforce(getMonth(dateTime("2018-05-08")) = 5);
		enforce(getMonth(dateTime("2018-12-08")) = 12);
		enforce(dateTime("2018-12-08") as "YYYY/MM/DD" = "2018/12/08");
    return MyResponse{
      output: "Duration.test successful"
    }
  }
}
