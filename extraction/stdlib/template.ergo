/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

namespace org.accordproject.ergo.template

define function variableTag(variableName:String,text:String) : String {
  if getOptions().wrapVariables
  then return "<variable id=\"" ++ variableName ++ "\" value=\"" ++ encode(text) ++ "\"/>"
  else return text
}

define function variableTagAs(variableName:String,text:String,format:String) : String {
  if getOptions().wrapVariables
  then return "<variable id=\"" ++ variableName ++ "\" value=\"" ++ encode(text) ++ "\" format=\"" ++ encode(format) ++ "\"/>"
  else return text
}

define function ifBlockTag(variableName:String,condition:Boolean,whenTrue:String,whenFalse:String) : String {
  if getOptions().wrapVariables
  then
    let conditionText = if condition then whenTrue else whenFalse;
    return "<if id=\"" ++ variableName ++ "\" value=\"" ++ encode(conditionText) ++ "\" whenTrue=\"" ++ encode(whenTrue) ++ "\" whenFalse=\"" ++ encode(whenFalse) ++ "\"/>"
  else
    let conditionText = if condition then whenTrue else whenFalse;
    return conditionText
}

define function listBlockTag(text:String) : String {
  if getOptions().wrapVariables
  then return "```<list/>" ++ text ++ "\n```"
  else return text
}

define function computedTag(text:String) : String {
  if getOptions().wrapVariables
  then return "<computed value=\"" ++ encode(text) ++ "\"/>"
  else if getOptions().template
  then return "{{" ++ text ++ "}}"
  else return text
}
