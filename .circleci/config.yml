common_cache_key: &common_cache_key
  key: dependency-cache-{{ checksum "../ocaml-version" }}-{{ checksum ".circleci/config.yml" }}-{{ checksum "coq-ergo-lang.opam" }}

common_steps: &common_steps
  steps:
    - run:
        name: "Install npm"
        command: |
          curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -
          sudo apt-get install -y nodejs
          mkdir -p ~/.npm-global
          npm config set prefix $NPM_CONFIG_PREFIX
    - checkout
    - run:
        name: "Note OCAML_VERSION for cache"
        command: echo $OCAML_VERSION > ../ocaml-version
    - restore_cache:
        <<: *common_cache_key
    - run:
        name: "Install prerequisites"
        command: |
          sudo npm install -g lerna@^4.0.0
          sudo apt-get update
          sudo apt-get install -y m4
          sudo apt-get install -y pkg-config libncurses5-dev
          sudo apt-get install -y bubblewrap
    - run:
        name: "Initialize opam"
        command: |
          echo "OCaml: " $OCAML_VERSION
          sudo curl -sL https://raw.githubusercontent.com/ocaml/opam/master/shell/install.sh > install.sh
          echo | sudo sh install.sh
          opam init --disable-sandboxing --jobs=$NJOBS --no-setup --yes --compiler=$OCAML_VERSION
          sed -i "s/^jobs: [0-9]*/jobs: $NJOBS/g" ~/.opam/config
          eval $(opam env)
          opam switch create $OCAML_VERSION || true
          opam switch set $OCAML_VERSION
          opam repo add coq-released https://coq.inria.fr/opam/released || true
          opam update || true
    - run:
        name: "Install OPAM deps"
        command: opam install . --deps-only --jobs=$NJOBS --yes
        no_output_timeout: 45m
    - save_cache:
        <<: *common_cache_key
        paths:
          - ~/.opam
          - ~/.npm-global
    - run:
        name: 'Clean'
        command:  |
          eval $(opam env)
          make cleanall
    - run:
        name: 'Build Ergo'
        command:  |
          eval $(opam env)
          make configure
          make all -j$NJOBS
    - run:
        name: 'Testing'
        command:  |
          npm run test
    # Save test results
    - store_test_results:
        path: /tmp/circleci-test-results

version: 2
jobs:
  4.09.1:
    docker:
    - image: circleci/openjdk:8-jdk
    environment:
      - TERM: dumb
      - OCAML_VERSION: "4.09.1"
      - CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
      - NJOBS: 2
      - NPM_CONFIG_PREFIX: "~/.npm-global"
    <<: *common_steps
  4.11.2:
    docker:
    - image: circleci/openjdk:8-jdk
    environment:
      - TERM: dumb
      - OCAML_VERSION: "4.11.2"
      - CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
      - NJOBS: 2
      - NPM_CONFIG_PREFIX: "~/.npm-global"
    <<: *common_steps

workflows:
  version: 2
  build-deploy:
    jobs:
      - 4.09.1
      - 4.11.2
