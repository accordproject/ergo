version: 2
jobs:
  build:
    working_directory: ~/accordproject/ergo
    parallelism: 1
    shell: /bin/bash --login
    environment:
      - CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
      - NPM_CONFIG_PREFIX: "~/.npm-global"
    docker:
    - image: ocaml/opam2
    steps:
    - run: echo 'export PATH=~/ergo/bin/:$PATH' >> $BASH_ENV 
    - checkout
    - restore_cache:
        keys:
        - v1-dep-{{ .Branch }}-
        - v1-dep-master-
        - v1-dep-
    - run:
        name: "Install npm"
        command: |
          curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -
          sudo apt-get install -y nodejs
          mkdir -p ~/.npm-global
          npm config set prefix $NPM_CONFIG_PREFIX
    - run: sudo npm install -g lerna@2.11.0
    - run:
        name: "Initialize opam"
        command: |
          sudo apt-get install -y m4
          opam init --auto-setup --dot-profile=~/.bash_profile
          opam remote add ocamlorg https://opam.ocaml.org || true
          opam remote remove default || true
          export TERM=dumb && opam switch create 4.07.1 ocaml-base-compiler.4.07.1 
          eval `opam config env`
          export TERM=dumb && opam repo add coq-released https://coq.inria.fr/opam/released || true
          export TERM=dumb && opam update || true
    - run:
        name: "Install ocaml deps"
        command: export TERM=dumb && opam install -y --jobs=2 ocamlbuild menhir camlp5 base64 js_of_ocaml js_of_ocaml-ppx yojson.1.4.1 atdgen re calendar
    - run:
        name: "Install coq deps"
        command: export TERM=dumb && opam install -y --jobs=2 coq.8.8.2
        no_output_timeout: 30m
    - run:
        name: "Install qcert"
        command: export TERM=dumb && opam install -y --jobs=2 coq-qcert.1.2.0
        no_output_timeout: 30m
    - save_cache:
        key: v1-dep-{{ .Branch }}-{{ epoch }}
        paths:
        - ~/.opam
        - ~/.npm-global
    - run: eval `opam config env` && make cleanall && make ergo
    # Save test results
    - store_test_results:
        path: /tmp/circleci-test-results
    # Save artifacts
