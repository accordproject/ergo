;; Parser rules

(ocamllex
  (modules ergo_lexer)
)

(menhir
  (modules ergo_parser)
)

;; Atd rules

(rule
 (targets monitor_j.ml
          monitor_j.mli)
 (deps    monitor.atd)
 (action  (run atdgen -j -j-std %{deps})))

(rule
 (targets monitor_t.ml
          monitor_t.mli)
 (deps    monitor.atd)
 (action  (run atdgen -t %{deps})))

(rule
 (targets cto_j.ml
          cto_j.mli)
 (deps    cto.atd)
 (action  (run atdgen -j -j-std %{deps})))

(rule
 (targets cto_t.ml
          cto_t.mli)
 (deps    cto.atd)
 (action  (run atdgen -t %{deps})))

;; Includes

(copy_files stdlib/*.{ml,mli})
(copy_files atds/*.{atd})
(copy_files extraction/*.{ml,mli})
(copy_files parsing/*.{mll,mly})
(copy_files# lib/*.{ml,mli})

;; Ergo library

(library
 (name ergo_lib)
 (public_name coq-ergo-lang)
 (libraries atdgen base64 re.str uri calendar)
)
