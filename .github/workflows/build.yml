name: Build

on:
  push:
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Unit Tests

    strategy:
      matrix:
        node-version:
          - 12.x
          - 14.x
        os:
          - ubuntu-latest
          - windows-latest
          - macOS-latest

    runs-on: ${{ matrix.os }}

    steps:
      - name: git checkout
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
    
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test

      - name: Calculate code coverage
        run: npm run coverage

      - name: Coveralls
        if: ${{ matrix.os != 'windows-latest' }}
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: ${{ matrix.os }}
          parallel: true

  notify:
    needs:
      - build

    name: Code Coverage
    if: ${{ success() }}
    runs-on: ubuntu-latest

    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true

  publish:
    needs:
      - build
      - notify

    name: Publish to npm
    if: ${{ success() && github.event_name == 'push' && github.repository_owner == 'accordproject' }}
    runs-on: ubuntu-latest

    outputs:
      job-status: ${{ job.status }}

    steps:
      - name: git checkout
        uses: actions/checkout@v2

      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
    
      - name: Build
        run: npm ci

      - name: timestamp
        id: timestamp
        run: |
          node ./scripts/timestamp.js
      - name: build and publish
        run: |
          npm config set //registry.npmjs.org/:_authToken ${{ secrets.NPM_TOKEN }}
          npm version --no-git-tag-version --yes --exact ${{ steps.timestamp.outputs.stamp }}
          npx lerna version --no-git-tag-version --yes --exact ${{ steps.timestamp.outputs.stamp }}
          npx lerna exec -- npm publish --access public --ignore-scripts --tag=unstable 2>&1